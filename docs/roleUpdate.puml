@startuml
title Permission Update Flow with Transactional Rollback (Kafka Failure)

actor Admin as A
participant "Auth API" as API
participant "UsersService" as S
database "MySQL (user_permissions)" as DB
queue "Kafka" as K

A -> API : PUT /web/user/{id}/permissions \n [new permissions]
API -> S : setNewPermissions(userId, permissions)

== Transaction Begin ==
S -> DB : DELETE FROM user_permissions WHERE user_id = :id
S -> DB : INSERT INTO user_permissions \n (user_id, scope, entity, access, actions)
DB --> S : OK

S -> K : Publish event \n "user.permissions.changed" \n {user_id, changed_at}
alt Publish success
    S -> DB : COMMIT
    S --> A : 200 OK { success: true }
else Publish failed
    S -> DB : ROLLBACK
    S --> A : 500 Internal Error
end
== Transaction End ==

note over S, K
The UsersService ensures atomicity:
 permission changes are only committed if Kafka publish succeeds.
end note
@enduml
